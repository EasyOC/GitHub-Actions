name: Check Spelling
description: Checks for spelling errors in files.

inputs:
  GITHUB_TOKEN:
    description: 'The GITHUB_TOKEN secret'
    default: "${{ github.token }}"
    required: true
  bucket:
    description: 'Container for spelling configuration'
    required: false
  project:
    description: 'Folder/Branch within bucket containing spelling configuration'
    required: false
  config:
    description: 'Spelling configuration directory'
    default: ".github/actions/spelling"
    required: false
  experimental_path:
    description: 'Directory root to check for spelling (note that bucket/project/config are independent of this)'
    default: '.'
    required: false
  dictionary_url:
    description: "Location of dictionary (if you aren't providing one in your repository)"
    default: 'https://raw.githubusercontent.com/check-spelling/check-spelling/dictionary-$DICTIONARY_VERSION/dict.txt'
    required: false
  dictionary_version:
    description: 'Version of the dictionary (only used if the url includes $DICTIONARY_VERSION)'
    default: "20200211"
    required: false
  debug:
    description: 'Debug'
    required: false
  experimental_apply_changes_via_bot:
    description: '(Experimental) Allow users to quote-reply to the bot comment to update the PR'
    default: "0"
    required: false
  experimental_parallel_jobs:
    description: 'Number of CPUs available for running checks'
    required: false
    default: '2'
  post_comment:
    description: 'Post comment with report'
    required: false
    default: '1'
  capture_output_unknown_words:
    description: ''
    required: false
    deprecationMessage: 'Obsolete: outputs are always captured'
    default: ''
  capture_output_stale_words:
    description: ''
    deprecationMessage: 'Obsolete: outputs are always captured'
    required: false
    default: ''
  capture_output_skipped_files:
    description: ''
    deprecationMessage: 'Obsolete: outputs are always captured'
    required: false
    default: ''
  dictionary_source_prefixes:
    description: 'JSON map of prefixes for dictionary urls'
    required: false
    default: '{"cspell": "https://raw.githubusercontent.com/check-spelling/cspell-dicts/v20220427/dictionaries/"}'
  extra_dictionaries:
    description: 'Space delimited list of URLs (or `prefix:`+path) to additional word lists'
    required: false
    default: ''
  check_extra_dictionaries:
    description: 'Compare unknown tokens against these dictionaries and suggest if applicable'
    required: false
    default:
      cspell:ada/ada.txt
      cspell:aws/aws.txt
      cspell:bash/bash-words.txt
      cspell:companies/companies.txt
      cspell:cpp/cpp.txt
      cspell:csharp/csharp.txt
      cspell:css/css.txt
      cspell:django/django.txt
      cspell:dotnet/dotnet.txt
      cspell:elixir/elixir.txt
      cspell:en_GB/src/wordsEnGb.txt
      cspell:filetypes/filetypes.txt
      cspell:fonts/fonts.txt
      cspell:fullstack/fullstack.txt
      cspell:golang/go.txt
      cspell:haskell/haskell.txt
      cspell:html/html.txt
      cspell:java/java.txt
      cspell:latex/latex.txt
      cspell:lua/lua.txt
      cspell:node/node.txt
      cspell:npm/npm.txt
      cspell:php/php.txt
      cspell:python/python.txt
      cspell:ruby/ruby.txt
      cspell:rust/rust.txt
      cspell:scala/scala.txt
  event_aliases:
    description: >-
      Try to treat a GitHub event "a" as GitHub event "b" (JSON map).
      If this flag was available before this tool recognized `pull_request_target`,
      `{"pull_request_target":"pull_request"}` would have mapped it to `pull_request`.
    required: false
    default: ''
  shortest_word:
    description: 'Shortest word'
    required: false
    default: '3'
  longest_word:
    description: 'Longest word'
    required: false
    default: ''
  experimental_commit_note:
    description: 'If set, commit updates to expect automatically with this note'
    required: false
    default: ''
  suppress_push_for_open_pull_request:
    description: "If set, do not do work in response to `push` if there is an open `pull` request to the repository for the branch (this assumes there's a `pull_request_target` event configured)."
    required: false
    default: ''
  only_check_changed_files:
    description: 'If set, only check files changed since the last push'
    required: false
    default: ''
  custom_task:
    description: 'Run an internal task instead of responding to a GitHub event. Values: "comment"'
    required: false
    default: ''
  internal_state_directory:
    description: 'Used for passing internal state from the (default) check mode to the comment module'
    required: false
    default: ''

outputs:
  unknown_words:
    description: "Unrecognized words (should be added to expect.txt)"
    value: ${{ steps.spelling.outputs.unknown_words }}
  stale_words:
    description: "Stale words (should be removed from expect.txt) as an output"
    value: ${{ steps.spelling.outputs.stale_words }}
  skipped_files:
    description: "Skipped files (could be added to excludes.txt)"
    value: ${{ steps.spelling.outputs.skipped_files }}
  suggested_dictionaries:
    description: "Suggested dictionaries (could be added to extra_dictionaries)"
    value: ${{ steps.spelling.outputs.suggested_dictionaries }}
  warnings:
    description: "Warnings"
    value: ${{ steps.spelling.outputs.warnings }}
  internal_state_directory:
    description: 'Used for passing internal state from the (default) check mode to the comment module'
    value: ${{ steps.spelling.outputs.internal_state_directory }}

runs:
  using: "composite"
    steps:
      - name: Check Spelling
        uses: check-spelling/check-spelling@v0.0.20-alpha5
