name: Run .NET tests
description: >
  Runs .NET unit and UI tests (with the Lombiq UI Testing Toolbox for Orchard Core:
  https://github.com/Lombiq/UI-Testing-Toolbox), generates a test report and uploads UI testing failure dumps to
  artifacts.

inputs:
  build-directory:
    required: false
    default: .
    description: Path to the directory where a solution file can be found and thus the .NET build has run.
  test-verbosity:
    required: false
    default: quiet
    description: Verbosity parameter for dotnet test.
  ui-test-parallelism:
    required: false
    default: "-1"
    description: >
      Determines how many UI tests will run in parallel. Affects both xUnit's maxParallelThreads configuration and the
      MaxParallelTests configuration of Lombiq UI Testing Toolbox. If set to "-1" then the configuration coming from the
      code won't be overridden.

runs:
  using: "composite"
  steps:
    - name: Setup Scripts
      shell: pwsh
      run: |
        "${{ github.action_path }}" >> $Env:GITHUB_PATH
        (Resolve-Path "${{ github.action_path }}/../../../Scripts").Path >> $Env:GITHUB_PATH

    - name: Setup & Set UI Test Parallelization
      id: setup-parameters
      shell: pwsh
      run: |
        if (${{ inputs.ui-test-parallelism }} -eq -1)
        {
            Write-Output "The UI test parallelism configuration isn't overridden."
            Exit 0
        }

        "Lombiq_Tests_UI__OrchardCoreUITestExecutorConfiguration__MaxParallelTests=${{ inputs.ui-test-parallelism }}" >> $Env:GITHUB_ENV

        Set-XUnitMaxParallelThreads -MaxParallelThreads ${{ inputs.ui-test-parallelism }}
        Set-Output "friendly-build-directory-name" "${{ inputs.build-directory }}".Replace("/", "__")
        "test=value" >> $Env:GITHUB_OUTPUT
    
    - name: Run Tests
      shell: pwsh
      working-directory: ${{ inputs.build-directory }}
      run: |
        Write-Output "Outputs: "
        Write-Output "1: ${{ steps.setup-parameters.outputs.friendly-build-directory-name }}"
        Write-Output "2: ${{ steps.setup-parameters.outputs.test }}"

    - name: Set color
      shell: bash
      id: random-color-generator
      run: echo "SELECTED_COLOR=green" >> $GITHUB_OUTPUT
    - name: Get color
      shell: bash
      run: echo "The selected color is ${{ steps.random-color-generator.outputs.SELECTED_COLOR }}"
