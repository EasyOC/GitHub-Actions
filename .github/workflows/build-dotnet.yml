name: Build .NET solution

on:
  workflow_call:
    inputs:
      # This needs to be stringified JSON because inputs don't support arrays, see 
      # https://github.community/t/reusable-workflow-with-strategy-matrix/205676/2.
      machine-types:
        required: false
        type: string
        default: "[\"ubuntu-latest\"]"
        description: >
            Stringified JSON array with the name of the type of machine(s) to run the workflow under, e.g.
            "[\"ubuntu-latest\"]" or "[\"ubuntu-latest\", \"windows-latest\"]". Defaults to "[\"ubuntu-latest\"]".
      dotnet-version:
        required: false
        type: string
        default: 6.0.*
        description: Version of the .NET SDK to set up. Defaults to "${{ inputs.dotnet-version.default }}".
      build-directory:
        required: false
        type: string
        default: .
        description: Path to the directory where a solution file can be found. Defaults to ".".
      build-verbosity:
        required: false
        type: string
        default: quiet
        description: Verbosity parameter for dotnet build. Defaults to "quiet".
      build-enable-code-analysis:
        required: false
        type: string
        default: "true"
        description: Indicates whether to enable static code analysis during dotnet build. Defaults to "true".
      timeout-minutes:
        required: false
        type: number
        default: 360
        description: Configuration for the timeout-minutes parameter of the workflow. Defaults to 360 (the GitHub default).

jobs:
  # While the below steps seem suitable to DRY with build-and-test-orchard-core, since reusable workflows can't call
  # other workflows, they'd need to be encapsulated in a composite action. That, however, will result in a single step
  # being shown under the build details with all below steps mushed together.
  build:
    runs-on: ${{ matrix.machine-type }}
    name: Build and Test
    # Timeout-minutes is in the matrix only because the config can't be set directly from the inputs, see:
    # https://github.com/actions/runner/issues/1555.
    strategy:
      matrix:
        machine-type: ${{ fromJson(inputs.machine-types) }}
        timeout-minutes:
        - ${{ inputs.timeout-minutes }}
    timeout-minutes: ${{ matrix.timeout-minutes }}
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - name: Set up .NET
      uses: Lombiq/GitHub-Actions/.github/actions/setup-dotnet@dev
      with:
        dotnet-version: ${{ inputs.dotnet-version }}

    - name: Build and Static Code Analysis
      uses: Lombiq/GitHub-Actions/.github/actions/build-dotnet@dev
      with:
        directory: ${{ inputs.build-directory}}
        verbosity: ${{ inputs.build-verbosity}}
        enable-code-analysis: ${{ inputs.build-enable-code-analysis}}
